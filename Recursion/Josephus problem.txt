Josephus problem

You are playing a game with n people standing in a circle, numbered from 1 to n. Starting from person 1, every kth person is eliminated in a circular fashion. The process continues until only one person remains.
Given integers n and k, return the position (1-based index) of the person who will survive.

Examples :

Input: n = 3, k = 2
Output: 3
Explanation: There are 3 persons so skipping 1 person i.e 1st person 2nd person will be killed. Thus the safe position is 3.
Input: n = 5, k = 3
Output: 4
Explanation: There are 5 persons so skipping 2 person i.e 3rd person will be killed. Thus the safe position is 4.

Code:------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int josephus(int n, int k) 
    {
       int ans=solve(n,k);
       return ans+1;
    }
    public int solve(int n,int k)
    {
         if(n==1)
        {
            return 0;
        }
       
       return ((solve(n-1,k)+k)%n);
    }
}