Iterative Postorder

Given a binary tree. Find the postorder traversal of the tree without using recursion. Return a list containing the postorder traversal of the tree, calculated without using recursion.

Examples :

Input:
           1
         /   \
        2     3
      /  \
     4    5

Output: 4 5 2 3 1
Explanation: Postorder traversal (Left->Right->Root) of the tree is 4 5 2 3 1.
Input:
             8
          /      \
        1          5
         \       /   \
          7     10    6
           \   /
            10 6

Output: 10 7 1 6 10 6 5 8 
Explanation: Postorder traversal (Left->Right->Root) of the tree is 10 7 1 6 10 6 5 8 .

Code:--------------------------------------------------------------------------------------


class Tree {
    ArrayList<Integer> postOrder(Node root) 
    {
        ArrayList<Integer>ans=new ArrayList<>();
        helper(root,ans);
        return ans;
    }
    public void helper(Node root,ArrayList<Integer>ans)
    {
        if(root==null)
        {
            return;
        }
        helper(root.left,ans);
        helper(root.right,ans);
        ans.add(root.data);
    }
}
