Preorder traversal (Iterative)

Given a Binary tree. Find the preorder traversal of the tree without using recursion.


Example 1:

Input:
           1
         /   \
        2     3
      /  \
     4    5
Output: 1 2 4 5 3
Explanation:
Preorder traversal (Root->Left->Right) of 
the tree is 1 2 4 5 3.
Example 2

Input:
            8
          /   \
         1      5
          \    /  \
           7  10   6
            \  /
            10 6
Output: 8 1 7 10 5 10 6 6 
Explanation:
Preorder traversal (Root->Left->Right) 
of the tree is 8 1 7 10 5 10 6 6.



Code:-------------------------------------------------------------


class Tree {
    // Return a list containing the Preorder traversal of the given tree
    ArrayList<Integer> preOrder(Node root)
    {
        ArrayList<Integer>ans=new ArrayList<>();
        helper(root,ans);
        return ans;
    }
    public void helper(Node root,ArrayList<Integer>ans)
    {
        if(root==null)
        {
            return;
        }
        ans.add(root.data);
        helper(root.left,ans);
        helper(root.right,ans);
    }
}