//Right View of Binary Tree
//Given a Binary Tree, find Right view of it. 
//Right view of a Binary Tree is set of nodes visible 
//when tree is viewed from right side
Right view of following tree is 1 3 7 8.

          1
       /     \
     2        3
   /   \      /    \
  4     5   6    7
    \
     8

Input:
     10
    /   \
  20     30
 /   \
40  60 
Output: 10 30 60     
 
 /*Complete The Function Provided
Given Below is The Node Of Tree
class Node
{
    int data;
    Node left, right;
    public Node(int data)
    {
        this.data = data;
         left = right = null;
    }
}*/


class Solution{
    //Function to return list containing elements of right view of binary tree.
    ArrayList<Integer> rightView(Node root) {
        ArrayList<Integer>ans1=new ArrayList<>();
        Queue<Node>q1=new LinkedList<>();
        q1.add(root);
        q1.add(null);
        
        while(!q1.isEmpty()){
            Node front=q1.poll();
            if(front==null){
                break;
            }
            if(q1.peek()==null){
                ans1.add(front.data);
            }
            if(front.left!=null){
                q1.add(front.left);
            }
            if(front.right!=null){
                q1.add(front.right);
            }
            if(q1.peek()==null){
                q1.poll();
                q1.add(null);
            }
        }
        return ans1;
    }
}