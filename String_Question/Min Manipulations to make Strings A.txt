Min Manipulations to make Strings Anagram

Given two strings in lowercase, your task is to find minimum number of manipulations required to make two strings anagram without deleting any character. If two strings contains same data set in any order then strings are called Anagrams.

Example 1:

Input:
S1 = "aba", S2 = "baa", N = 3
Output: 0
Explanation: Both the strings are already
anagrams.
â€‹Example 2:

Input: 
S1 = "ddcf", S2 = "cedk", N = 4
Output: 2
Explanation: We can change 'e' and 'k' in
S2 to 'd' and 'f' to make both the strings
anagram. 

Code:-

class Solution {
    int minManipulation(int N, String str1, String str2)
    {
        int store[]=new int[26];
        for(int i=0;i<str1.length();i++)
        {
            store[str1.charAt(i)-'a']++;
        }
        for(int i=0;i<str2.length();i++)
        {
            if(store[str2.charAt(i)-'a']>0)
            {
                store[str2.charAt(i)-'a']--;
            }
        }
        int ans=0;
        for(int i=0;i<26;i++)
        {
            ans=ans+store[i];
        }
        return ans;
    }
}