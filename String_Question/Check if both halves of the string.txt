Check if both halves of the string have same set of characters

Given a string of lowercase characters only. The task is to check if it is possible to split a string from the middle, giving two halves with the same characters and the same frequency of each character.
Note: If the length of the given string is ODD, ignore the middle element and check for the rest.

 

Example 1:

Input:
S = abbaab
Output: NO
Explanation: 
The two halves contain the same 
characters but their frequencies 
do not match so they are NOT CORRECT

Example 2:

Input:
S = abccab
Output: YES


code:-


class Solution {
    public boolean checkIfEqual(String str)
    {
        HashMap<Character,Integer>map=new HashMap<>();
        for(int i=0;i<str.length()/2;i++)
        {
            if(map.containsKey(str.charAt(i)))
            {
                map.put(str.charAt(i),map.get(str.charAt(i))+1);
            }
            else
            {
                map.put(str.charAt(i),1);
            }
        }
        int k=str.length()-1;
        for(int i=0;i<str.length()/2;i++)
        {
            if(map.containsKey(str.charAt(k)))
            {
                if(map.get(str.charAt(k))==1)
                {
                    map.remove(str.charAt(k));
                }
                else{
                    map.put(str.charAt(k),map.get(str.charAt(k))-1);
                }
                k--;
            }
            else
            {
                return false;
            }
        }
        
        return map.isEmpty();
    }
}