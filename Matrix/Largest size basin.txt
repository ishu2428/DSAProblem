Largest size basin

Given a matrix mat of positive integers having n rows and m coloumns. Adjacent cells with the same value form's a basin, for a cell (i,j) the adjacent cells are (i+1, j), (i-1, j), (i, j-1), (i, j+1) . Find the largest size basin.
 

Example 1:

Input: 
N = 6, M = 6
mat = [{9 9 9 8 8 8},
       {8 8 8 7 7 7},
       {7 7 7 7 7 7},
       {8 8 8 8 9 9},
       {5 5 5 5 6 3},
       {5 5 5 3 3 3}]
Output:
9
Explanation:
The Bold values form the maximum size basin,
having 9 adjacent cells with the value of 7.
 

Example 2:

Input: 
N = 3, M = 3
mat = [{1 1 6},
       {6 1 7},
       {6 1 1}]
Output:
5
Explanation:
The Bold values form the maximum size basin,
with 5 adjacent nodes having a value of 1.


Code:------------------------------------------

class Solution {
    static int count;
    static int u[]={-1,0,1,0};
    static int v[]={0,1,0,-1};
    public int findBasin(int n, int m, int[][] mat) 
    {
        int max=Integer.MIN_VALUE;
        int visited[][]=new int[mat.length][mat[0].length];
        for(int i=0;i<mat.length;i++)
        {
            for(int j=0;j<mat[0].length;j++)
            {
                if(visited[i][j]==0)
                {
                    count=0;
                    dfs(mat,visited,i,j,mat[i][j]);
                    if(max<count)
                    {
                        max=count;
                    }
                }
            }
        }
        return max;
    }
    public void dfs(int mat[][],int visited[][],int i,int j,int val)
    {
        visited[i][j]=1;
        count++;
        
        for(int i1=0;i1<4;i1++)
        {
            int u1=u[i1]+i;
            int v1=v[i1]+j;
            if(u1>=0 && u1<mat.length && v1>=0 && v1<mat[0].length && visited[u1][v1]==0 && mat[u1][v1]==val )
            {
                dfs(mat,visited,u1,v1,val);
            }
        }
    }
}