Find rectangle with corners as 1

Given an n x m binary matrix mat[][] containing only 0s and 1s, determine if there exists a rectangle within the matrix such that all four corners of the rectangle are 1. If such a rectangle exists, return true; otherwise, return false.

Example:

Input: mat[][] =
[[1, 0, 0, 1, 0],
[0, 0, 1, 0, 1],
[0, 0, 0, 1, 0], 
[1, 0, 1, 0, 1]] 
Output: true
Explanation: Valid corners are at index (1,2), (1,4), (3,2), (3,4) 
Input: mat[][] =
[[0, 0, 0],
[0, 0, 0],
[0, 0, 0]]
Output: false
Explanation: There are no valid corners.

Code:--------------------------------------------------------------------------

class Solution {
    public boolean ValidCorner(int mat[][]) 
    {
        HashSet<String>set=new HashSet<>();
        for(int i=0;i<mat.length;i++)
        {
            for(int j=0;j<mat[0].length;j++)
            {
                if(mat[i][j]==1)
                {
                    for(int k1=j+1;k1<mat[0].length;k1++)
                    {
                        if(mat[i][k1]==1)
                        {
                            String t1=j+""+k1;
                            if(set.contains(t1))
                            {
                                return true;
                            }
                            else
                            {
                                set.add(t1);
                            }
                        }
                    }
                }
            }
        }
        return false;
    }
}