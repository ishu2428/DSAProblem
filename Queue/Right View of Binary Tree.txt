Right View of Binary Tree


Given a Binary Tree, Your task is to return the values visible from Right view of it.

Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

Examples :

Input: root = [1, 2, 3, 4, 5]
     2_2
Output: [1, 3, 5]
Input: root = [1, 2, 3, 4, N, N, 5]
     Right-view-in-binary-tree-1
Output: [1, 3, 4, 5]
Input: root = [10, 20, 90, 40, 60]
     10
    /   \
  20     90
 /   \
40  60 
Output: [10, 90, 60]

Code:-

class Solution {
    // Function to return list containing elements of right view of binary tree.
    ArrayList<Integer> rightView(Node root) {
        Queue<Node>q1=new LinkedList<>();
        q1.add(root);
        q1.add(null);
        ArrayList<Integer>ans=new ArrayList<>();
        int level=1;
        while(!q1.isEmpty())
        {
            Node front=q1.poll();
            if(front==null)
            {
                break;
            }
            if(ans.size()<level)
            {
                ans.add(front.data);
            }
            if(front.right!=null)
            {
                q1.add(front.right);
            }
            if(front.left!=null)
            {
                q1.add(front.left);
            }
            if(q1.peek()==null)
            {
                q1.poll();
                q1.add(null);
                level++;
            }
        }
        return ans;
    }
}