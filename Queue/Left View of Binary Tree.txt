Left View of Binary Tree

You are given the root of a binary tree. Your task is to return the left view of the binary tree. The left view of a binary tree is the set of nodes visible when the tree is viewed from the left side.

If the tree is empty, return an empty list.

Examples :

Input: root[] = [1, 2, 3, 4, 5, N, N]

Output: [1, 2, 4]
Explanation: From the left side of the tree, only the nodes 1, 2, and 4 are visible.

Input: root[] = [1, 2, 3, N, N, 4, N, N, 5, N, N]

Output: [1, 2, 4, 5]
Explanation: From the left side of the tree, the nodes 1, 2, 4, and 5 are visible.

Input: root[] = [N]
Output: []

Code:-

class Solution {
    // Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root) 
    {
       ArrayList<Integer>ans=new ArrayList<>();
       Queue<Node>q1=new LinkedList<>();
       q1.add(root);
       q1.add(null);
       int level=1;
       while(!q1.isEmpty())
       {
           Node front=q1.poll();
           if(front==null)
           {
               break;
           }
           if(ans.size()<level)
           {
               ans.add(front.data);
           }
           if(front.left!=null)
           {
               q1.add(front.left);
           }
           if(front.right!=null)
           {
               q1.add(front.right);
           }
           if(q1.peek()==null)
           {
               q1.poll();
               q1.add(null);
               level++;
           }
       }
       return ans;
    }
}

