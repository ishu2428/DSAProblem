Largest square formed in a matrix

Given a binary matrix mat, find out the maximum length of a side of a square sub-matrix with all 1s.

Examples:

Input: mat = [[0, 1, 1, 0, 1], 
              [1, 1, 0, 1, 0],
              [0, 1, 1, 1, 0],
              [1, 1, 1, 1, 0],
              [1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0]]
Output: 3
Explanation: 

The maximum length of a side of the square sub-matrix is 3 where every element is 1.
Input: mat = [[1, 1], 
              [1, 1]]
Output: 2
Explanation: The maximum length of a side of the square sub-matrix is 2. The matrix itself is the maximum sized sub-matrix in this case.
Input: mat = [[0, 0], 
              [0, 0]]
Output: 0
Explanation: There is no 1 in the matrix.

Code--------------------------------

// User function Template for Java

class Solution {
    static int maxSquare(int mat[][]) 
    {
       for(int i=1;i<mat.length;i++)
       {
           for(int j=1;j<mat[0].length;j++)
           {
               if(mat[i][j]==1)
               {
                   mat[i][j]+=Math.min(mat[i-1][j-1],Math.min(mat[i-1][j],mat[i][j-1]));
               }
           }
       }
       int max=Integer.MIN_VALUE;
       for(int i=0;i<mat.length;i++)
       {
           for(int j=0;j<mat[0].length;j++)
           {
               if(max<mat[i][j])
               {
                   max=mat[i][j];
               }
           }
       }
       return max;
    }
}