Delete Middle of Linked List

Given a singly linked list, delete the middle of the linked list.

Note:

If there are even nodes, then there would be two middle nodes, we need to delete the second middle element.
If the input linked list has a single node, then it should return NULL.
Examples:

Input: LinkedList: 1->2->3->4->5
Output: 1->2->4->5
Explanation:

Input: LinkedList: 2->4->6->7->5->1
Output: 2->4->6->5->1
Explaination:

Input: LinkedList: 7 
Output: <empty linked list>
Explanation: There was only one node and it was deleted.

Code:-

class Solution {
    Node deleteMid(Node head) 
    {
        if(head==null || head.next==null)
        {
            return null;
        }
        int l1=length(head);
        int mid=l1/2;
        int count=0;
        Node prev=null;
        Node temp=head;
        while(temp!=null)
        {
            if(count==mid)
            {
                prev.next=temp.next;
                break;
            }
            count++;
            prev=temp;
            temp=temp.next;
        }
        return head;
    }
    public int length(Node head)
    {
        int count=0;
        Node temp=head;
        while(temp!=null)
        {
            count++;
            temp=temp.next;
        }
        return count;
    }
}