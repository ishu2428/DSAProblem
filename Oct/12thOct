Duplicate subtree in Binary Tree
Given a binary tree, find out whether it contains a duplicate sub-tree of size two or more, or not.

Note: Two same leaf nodes are not considered as subtree as size of a leaf node is one. 

Example 1 :

Input : 
               1
             /   \ 
           2       3
         /   \       \    
        4     5       2     
                     /  \    
                    4    5
Output : 1
Explanation : 
    2     
  /   \    
 4     5
is the duplicate sub-tree.
Example 2 :

Input : 
               1
             /   \ 
           2       3
Output: 0
Explanation: There is no duplicate sub-tree 
in the given binary tree.

//code

int dupSub(Node root) {
        HashSet<String>set=new HashSet<>();
        String ans=helper(root,set);
        if(ans.equals("#")){
            return 1;
        }
        else{
            return 0;
        }
    }
    public String helper(Node root,HashSet<String>set){
        if(root==null){
            return "$";
        }
        String left=helper(root.left,set);
        if(left.equals("#")){
            return "#";
        }
        String right=helper(root.right,set);
        if(right.equals("#")){
            return "#";
        }
        String ans=root.data+left+right;
        if(ans.length()>3 && set.contains(ans)){
            return "#";
        }
        set.add(ans);
        return ans;
    }