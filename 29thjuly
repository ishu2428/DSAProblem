Median of BST
Given a Binary Search Tree of size N, find the Median of its Node values.
Example 1:

Input:
       6
     /   \
   3      8   
 /  \    /  \
1    4  7    9
Output: 6
Explanation: Inorder of Given BST will be:
1, 3, 4, 6, 7, 8, 9. So, here median will 6.

Example 2:

Input:
       6
     /   \
   3      8   
 /   \    /   
1    4   7   
Output: 5
Explanation:Inorder of Given BST will be:
1, 3, 4, 6, 7, 8. So, here median will
(4 + 6)/2 = 10/2 = 5.

code
class Tree
{
    public static float findMedian(Node root)
    {
        ArrayList<Integer>temp=new ArrayList<>();
        inLevel(root,temp);
        if(temp.size()%2==0){
            int mid=temp.size()/2;
            float ans=(temp.get(mid)+temp.get(mid-1))/2.0f;
            return ans;
        }
        else{
            int mid=temp.size()/2;
            return (float)(temp.get(mid));
        }
    }
    public static void inLevel(Node root,ArrayList<Integer>temp){
        if(root==null){
            return;
        }
        inLevel(root.left,temp);
        temp.add(root.data);
        inLevel(root.right,temp);
    }
}