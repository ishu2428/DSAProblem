Merge k Sorted Arrays

Given k sorted arrays arranged in the form of a matrix of size k * k. The task is to merge them into one sorted array. Return the merged sorted array ( as a pointer to the merged sorted arrays in cpp, as an ArrayList in java, and list in python).


Examples :

Input: k = 3, arr[][] = {{1,2,3},{4,5,6},{7,8,9}}
Output: 1 2 3 4 5 6 7 8 9
Explanation: Above test case has 3 sorted arrays of size 3, 3, 3 arr[][] = [[1, 2, 3],[4, 5, 6],[7, 8, 9]]. The merged list will be [1, 2, 3, 4, 5, 6, 7, 8, 9].
Input: k = 4, arr[][]={{1,2,3,4},{2,2,3,4},{5,5,6,6},{7,8,9,9}}
Output: 1 2 2 2 3 3 4 4 5 5 6 6 7 8 9 9 
Explanation: Above test case has 4 sorted arrays of size 4, 4, 4, 4 arr[][] = [[1, 2, 2, 2], [3, 3, 4, 4], [5, 5, 6, 6], [7, 8, 9, 9 ]]. The merged list will be [1, 2, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8, 9, 9].

code:--------------------------------------------------

class Pair{
    int val;
    int i;
    int j;
    public Pair(int val,int i,int j)
    {
        this.i=i;
        this.j=j;
        this.val=val;
    }
}
class Solution {
    // Function to merge k sorted arrays.
    public static ArrayList<Integer> mergeKArrays(int[][] arr, int K) 
    {
        ArrayList<Integer>ans=new ArrayList<>();
        PriorityQueue<Pair>pq=new PriorityQueue<>((x,y)->x.val-y.val);
        for(int i=0;i<arr.length;i++)
        {
            pq.add(new Pair(arr[i][0],i,0));
        }
        while(!pq.isEmpty())
        {
            Pair p1=pq.poll();
            ans.add(p1.val);
            if(p1.j+1<arr[0].length)
            {
                pq.add(new Pair(arr[p1.i][p1.j+1],p1.i,p1.j+1));
            }
        }
        return ans;
        
    }
}