Queue using stack

Implement a Queue using two stack s1 and s2.

Examples:

Input:
enqueue(2)
enqueue(3)
dequeue()
enqueue(4)
dequeue()
Output: 2 3
Explanation:
enqueue(2) the queue will be [2]
enqueue(3) the queue will be [2, 3]
dequeue() the poped element will be 2 
the queue will be [3]
enqueue(4) the queue will be [3, 4]
dequeue() the poped element will be [3].  
Input:
enqueue(2)
dequeue()
dequeue()
Output: 2 -1

Code:-

class Queue {
    Stack<Integer> main1 = new Stack<Integer>();
    Stack<Integer> hf = new Stack<Integer>();

    int dequeue() {
        if(main1.isEmpty())
        {
            return -1;
        }
        else
        {
            while(!main1.isEmpty())
            {
                hf.add(main1.pop());
            }
            int ans=hf.pop();
            while(!hf.isEmpty())
            {
                main1.add(hf.pop());
            }
            return ans;
        }
        
    }

    void enqueue(int x) {
        main1.push(x);
    }
}