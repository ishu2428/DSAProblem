Leaf under budge
Given a binary tree and a budget. Assume you are at the root of the tree(level 1), you need to maximise the count of leaf nodes you can visit in your budget if the cost of visiting a leaf node is equal to the level of that leaf node.

Example 1:

Input: 
                  10
                /    \
               8      2
             /      /   \
            3      3     6
                    \
                     4
and budget = 8
Output: 2
Explanation:
Cost For visiting Leaf Node 3: 3
Cost For visiting Leaf Node 4: 4
Cost For visiting Leaf Node 6: 3
In budget 8 one can visit Max 2 Leaf Nodes.
Example 2:

Input: 
         1
       /   \
      2     3
     / \   / \
    4   5 6   7
and budget = 5
Output: 1
Explanation: We can only visit either node 4 or 5.

//code
class Solution{
    public int getCount(Node root, int bud)
    {
        Queue<Node>q1=new LinkedList<>();
        q1.add(root);
        q1.add(null);
        int i=1;
        int ans=0;
        while(!q1.isEmpty()){
            Node front=q1.poll();
            if(front==null){
                break;
            }
            if(front.left==null && front.right==null){
                if(bud>=i){
                    ans++;
                    bud=bud-i;
                }
            }
            if(front.left!=null){
                q1.add(front.left);
            }
            if(front.right!=null){
                q1.add(front.right);
            }
            if(q1.peek()==null){
                i++;
                q1.poll();
                q1.add(null);
            }
        }
        return ans;
    }
}